// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: offloadproto/offload.proto

package offloadproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StateQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
}

func (x *StateQuery) Reset() {
	*x = StateQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offloadproto_offload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateQuery) ProtoMessage() {}

func (x *StateQuery) ProtoReflect() protoreflect.Message {
	mi := &file_offloadproto_offload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateQuery.ProtoReflect.Descriptor instead.
func (*StateQuery) Descriptor() ([]byte, []int) {
	return file_offloadproto_offload_proto_rawDescGZIP(), []int{0}
}

func (x *StateQuery) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

type StateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*NodeState `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *StateResponse) Reset() {
	*x = StateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offloadproto_offload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateResponse) ProtoMessage() {}

func (x *StateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offloadproto_offload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateResponse.ProtoReflect.Descriptor instead.
func (*StateResponse) Descriptor() ([]byte, []int) {
	return file_offloadproto_offload_proto_rawDescGZIP(), []int{1}
}

func (x *StateResponse) GetNodes() []*NodeState {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type CandidateQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName     string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	FunctionName string `protobuf:"bytes,2,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
}

func (x *CandidateQuery) Reset() {
	*x = CandidateQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offloadproto_offload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandidateQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateQuery) ProtoMessage() {}

func (x *CandidateQuery) ProtoReflect() protoreflect.Message {
	mi := &file_offloadproto_offload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateQuery.ProtoReflect.Descriptor instead.
func (*CandidateQuery) Descriptor() ([]byte, []int) {
	return file_offloadproto_offload_proto_rawDescGZIP(), []int{2}
}

func (x *CandidateQuery) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *CandidateQuery) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

type CandidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node  string        `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Finfo *FunctionInfo `protobuf:"bytes,2,opt,name=finfo,proto3" json:"finfo,omitempty"`
}

func (x *CandidateResponse) Reset() {
	*x = CandidateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offloadproto_offload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateResponse) ProtoMessage() {}

func (x *CandidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offloadproto_offload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateResponse.ProtoReflect.Descriptor instead.
func (*CandidateResponse) Descriptor() ([]byte, []int) {
	return file_offloadproto_offload_proto_rawDescGZIP(), []int{3}
}

func (x *CandidateResponse) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *CandidateResponse) GetFinfo() *FunctionInfo {
	if x != nil {
		return x.Finfo
	}
	return nil
}

type UpdateStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateStateResponse) Reset() {
	*x = UpdateStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offloadproto_offload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStateResponse) ProtoMessage() {}

func (x *UpdateStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offloadproto_offload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateStateResponse) Descriptor() ([]byte, []int) {
	return file_offloadproto_offload_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateStateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type NodeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FinfoList []*FunctionInfo `protobuf:"bytes,2,rep,name=finfo_list,json=finfoList,proto3" json:"finfo_list,omitempty"`
}

func (x *NodeState) Reset() {
	*x = NodeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offloadproto_offload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeState) ProtoMessage() {}

func (x *NodeState) ProtoReflect() protoreflect.Message {
	mi := &file_offloadproto_offload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeState.ProtoReflect.Descriptor instead.
func (*NodeState) Descriptor() ([]byte, []int) {
	return file_offloadproto_offload_proto_rawDescGZIP(), []int{5}
}

func (x *NodeState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeState) GetFinfoList() []*FunctionInfo {
	if x != nil {
		return x.FinfoList
	}
	return nil
}

type FunctionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionName  string  `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	InvokeHistory []int64 `protobuf:"varint,2,rep,packed,name=invoke_history,json=invokeHistory,proto3" json:"invoke_history,omitempty"`
	Qlen          float32 `protobuf:"fixed32,3,opt,name=qlen,proto3" json:"qlen,omitempty"`
}

func (x *FunctionInfo) Reset() {
	*x = FunctionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offloadproto_offload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionInfo) ProtoMessage() {}

func (x *FunctionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_offloadproto_offload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionInfo.ProtoReflect.Descriptor instead.
func (*FunctionInfo) Descriptor() ([]byte, []int) {
	return file_offloadproto_offload_proto_rawDescGZIP(), []int{6}
}

func (x *FunctionInfo) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *FunctionInfo) GetInvokeHistory() []int64 {
	if x != nil {
		return x.InvokeHistory
	}
	return nil
}

func (x *FunctionInfo) GetQlen() float32 {
	if x != nil {
		return x.Qlen
	}
	return 0
}

var File_offloadproto_offload_proto protoreflect.FileDescriptor

var file_offloadproto_offload_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f,
	0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6f, 0x66,
	0x66, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x29, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x39, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x0e, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x54, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x66, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x55, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x66,
	0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6e, 0x0a,
	0x0c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x71, 0x6c, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x71, 0x6c, 0x65, 0x6e, 0x32, 0xd6, 0x01,
	0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x75,
	0x62, 0x12, 0x41, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x1a, 0x1c, 0x2e, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x1a, 0x2e,
	0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x6f,
	0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x65, 0x64, 0x75, 0x2f, 0x66, 0x61, 0x61, 0x73,
	0x65, 0x64, 0x67, 0x65, 0x2f, 0x66, 0x65, 0x6f, 0x2f, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_offloadproto_offload_proto_rawDescOnce sync.Once
	file_offloadproto_offload_proto_rawDescData = file_offloadproto_offload_proto_rawDesc
)

func file_offloadproto_offload_proto_rawDescGZIP() []byte {
	file_offloadproto_offload_proto_rawDescOnce.Do(func() {
		file_offloadproto_offload_proto_rawDescData = protoimpl.X.CompressGZIP(file_offloadproto_offload_proto_rawDescData)
	})
	return file_offloadproto_offload_proto_rawDescData
}

var file_offloadproto_offload_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_offloadproto_offload_proto_goTypes = []interface{}{
	(*StateQuery)(nil),          // 0: offload.StateQuery
	(*StateResponse)(nil),       // 1: offload.StateResponse
	(*CandidateQuery)(nil),      // 2: offload.CandidateQuery
	(*CandidateResponse)(nil),   // 3: offload.CandidateResponse
	(*UpdateStateResponse)(nil), // 4: offload.UpdateStateResponse
	(*NodeState)(nil),           // 5: offload.NodeState
	(*FunctionInfo)(nil),        // 6: offload.FunctionInfo
}
var file_offloadproto_offload_proto_depIdxs = []int32{
	5, // 0: offload.StateResponse.nodes:type_name -> offload.NodeState
	6, // 1: offload.CandidateResponse.finfo:type_name -> offload.FunctionInfo
	6, // 2: offload.NodeState.finfo_list:type_name -> offload.FunctionInfo
	5, // 3: offload.OffloadStateHub.UpdateState:input_type -> offload.NodeState
	2, // 4: offload.OffloadStateHub.GetCandidate:input_type -> offload.CandidateQuery
	0, // 5: offload.OffloadStateHub.GetState:input_type -> offload.StateQuery
	4, // 6: offload.OffloadStateHub.UpdateState:output_type -> offload.UpdateStateResponse
	3, // 7: offload.OffloadStateHub.GetCandidate:output_type -> offload.CandidateResponse
	1, // 8: offload.OffloadStateHub.GetState:output_type -> offload.StateResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_offloadproto_offload_proto_init() }
func file_offloadproto_offload_proto_init() {
	if File_offloadproto_offload_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_offloadproto_offload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offloadproto_offload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offloadproto_offload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandidateQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offloadproto_offload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandidateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offloadproto_offload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offloadproto_offload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offloadproto_offload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_offloadproto_offload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_offloadproto_offload_proto_goTypes,
		DependencyIndexes: file_offloadproto_offload_proto_depIdxs,
		MessageInfos:      file_offloadproto_offload_proto_msgTypes,
	}.Build()
	File_offloadproto_offload_proto = out.File
	file_offloadproto_offload_proto_rawDesc = nil
	file_offloadproto_offload_proto_goTypes = nil
	file_offloadproto_offload_proto_depIdxs = nil
}
